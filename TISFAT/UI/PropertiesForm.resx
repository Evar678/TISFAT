<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="rtb_textText.Text" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum mollis mollis justo. Cras rhoncus mauris a dolor porttitor egestas. Etiam tortor diam, posuere vitae lobortis ac, tincidunt a augue. Cras eros orci, vehicula vel velit nec, dapibus aliquam libero. Mauris pellentesque erat neque, eget maximus sapien iaculis sit amet. Nam varius dolor in facilisis faucibus. Nulla ac tristique risus, ut tempor ex. Nulla facilisi. Curabitur convallis scelerisque ante laoreet gravida. Nulla facilisi. Nam sit amet libero sem. Sed ut ipsum quis dolor vulputate feugiat. Nullam rutrum quam sit amet ipsum sodales, ac volutpat lectus sodales.

Nunc in pulvinar dolor. Maecenas sed vehicula augue. Aliquam a ultricies tortor. In hac habitasse platea dictumst. Vestibulum quis sapien nunc. Pellentesque in lacus iaculis, auctor tellus eget, consequat augue. Nunc luctus ligula ac felis mollis, ut sagittis eros porttitor. Cras facilisis sapien efficitur urna sodales rutrum. Pellentesque fermentum mi non semper consequat. Maecenas vitae erat ut erat volutpat hendrerit vitae auctor orci. Nullam imperdiet purus ut auctor eleifend. Donec quis velit dui.

Mauris id sem velit. Maecenas convallis consequat lorem, non semper elit vehicula at. In vestibulum laoreet porttitor. Proin non ultricies nunc. Donec facilisis nunc et maximus faucibus. Phasellus blandit tincidunt nulla, eget lobortis libero imperdiet ac. Donec sit amet dignissim ipsum. Vestibulum dignissim maximus lorem at gravida. Nulla a metus consectetur, laoreet nunc eu, interdum metus. Nam ac rutrum massa. Morbi tincidunt molestie odio sodales aliquet. Etiam non congue mauris. Sed lacinia quis orci non congue.

Maecenas nec augue laoreet, rutrum purus et, feugiat leo. Donec velit ipsum, consequat vel odio eu, dictum eleifend nulla. Sed sit amet pretium nibh, vitae condimentum ipsum. Ut vitae nulla et sem scelerisque laoreet. Pellentesque consequat, tortor in pretium luctus, ante est imperdiet massa, vel rutrum ligula tortor quis nunc. Sed consectetur posuere libero, ut bibendum lectus consectetur vitae. Donec vel elit eget mauris commodo pulvinar sit amet varius risus. Cras commodo lectus in odio semper, non condimentum magna consequat. Aliquam pellentesque cursus tortor eget consectetur.

Morbi vestibulum ante tellus, nec convallis mi auctor ut. Nunc in nunc pulvinar, tincidunt metus eu, egestas tellus. Nulla vulputate nisl eu nisl elementum hendrerit. Donec magna elit, malesuada id leo ac, luctus placerat eros. Phasellus sed ultricies mi. Quisque augue diam, placerat sit amet dolor id, dapibus iaculis elit. Nullam iaculis, nisl ac fermentum maximus, ipsum massa cursus nibh, eu convallis urna massa at nibh. Nulla dignissim, erat ut interdum eleifend, dui tellus molestie magna, elementum convallis turpis nisi in augue. Proin quis sem ut nunc fringilla mattis.</value>
  </data>
</root>